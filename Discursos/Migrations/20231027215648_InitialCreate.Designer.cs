// <auto-generated />
using System;
using Discursos.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Discursos.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231027215648_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Discursos.Entities.Congregacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("CoordenadoraId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(255)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Nome", "Cidade", "UF");

                    b.HasIndex("CoordenadoraId");

                    b.HasIndex("TipoId");

                    b.ToTable("Congregacoes", (string)null);
                });

            modelBuilder.Entity("Discursos.Entities.Designacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Designacoes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = 1,
                            Descricao = "Servo Ministerial"
                        },
                        new
                        {
                            Id = 2,
                            Codigo = 2,
                            Descricao = "Ancião"
                        },
                        new
                        {
                            Id = 3,
                            Codigo = 3,
                            Descricao = "Pioneiro Especial"
                        },
                        new
                        {
                            Id = 4,
                            Codigo = 4,
                            Descricao = "Superintendente de Circuito"
                        },
                        new
                        {
                            Id = 5,
                            Codigo = 5,
                            Descricao = "Evento Especial"
                        });
                });

            modelBuilder.Entity("Discursos.Entities.Orador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CongregacaoId")
                        .HasColumnType("int");

                    b.Property<int>("DesignacaoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UltimaVezEm")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CongregacaoId");

                    b.HasIndex("DesignacaoId");

                    b.ToTable("Oradores", (string)null);
                });

            modelBuilder.Entity("Discursos.Entities.Programacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("OradorId")
                        .HasColumnType("int");

                    b.Property<int>("TemaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OradorId")
                        .IsUnique();

                    b.HasIndex("TemaId")
                        .IsUnique();

                    b.ToTable("Programacao", (string)null);
                });

            modelBuilder.Entity("Discursos.Entities.Tema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("DuracaoEmMinutos")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaVezEm")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasAlternateKey("Numero");

                    b.ToTable("Temas", (string)null);
                });

            modelBuilder.Entity("Discursos.Entities.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(3);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Tipos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Codigo = 1,
                            Descricao = "Grupo"
                        },
                        new
                        {
                            Id = 2,
                            Codigo = 2,
                            Descricao = "Grupo Isolado"
                        },
                        new
                        {
                            Id = 3,
                            Codigo = 3,
                            Descricao = "Congregação"
                        });
                });

            modelBuilder.Entity("OradorTema", b =>
                {
                    b.Property<int>("OradoresId")
                        .HasColumnType("int");

                    b.Property<int>("TemasId")
                        .HasColumnType("int");

                    b.HasKey("OradoresId", "TemasId");

                    b.HasIndex("TemasId");

                    b.ToTable("OradorTema");
                });

            modelBuilder.Entity("Discursos.Entities.Congregacao", b =>
                {
                    b.HasOne("Discursos.Entities.Congregacao", "Coordenadora")
                        .WithMany()
                        .HasForeignKey("CoordenadoraId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Discursos.Entities.Tipo", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coordenadora");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Discursos.Entities.Orador", b =>
                {
                    b.HasOne("Discursos.Entities.Congregacao", "Congregacao")
                        .WithMany("OradoresDaCongregacao")
                        .HasForeignKey("CongregacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Discursos.Entities.Designacao", "Designacao")
                        .WithMany()
                        .HasForeignKey("DesignacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Congregacao");

                    b.Navigation("Designacao");
                });

            modelBuilder.Entity("Discursos.Entities.Programacao", b =>
                {
                    b.HasOne("Discursos.Entities.Orador", "Orador")
                        .WithOne()
                        .HasForeignKey("Discursos.Entities.Programacao", "OradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Discursos.Entities.Tema", "Tema")
                        .WithOne()
                        .HasForeignKey("Discursos.Entities.Programacao", "TemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orador");

                    b.Navigation("Tema");
                });

            modelBuilder.Entity("OradorTema", b =>
                {
                    b.HasOne("Discursos.Entities.Orador", null)
                        .WithMany()
                        .HasForeignKey("OradoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Discursos.Entities.Tema", null)
                        .WithMany()
                        .HasForeignKey("TemasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Discursos.Entities.Congregacao", b =>
                {
                    b.Navigation("OradoresDaCongregacao");
                });
#pragma warning restore 612, 618
        }
    }
}
